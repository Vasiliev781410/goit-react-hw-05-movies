{"version":3,"file":"static/js/40.99365d9a.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/AdditionalMovieInfo/AdditionalMovieInfo.module.css?300e","components/AdditionalMovieInfo/AdditionalMovieInfo.jsx","webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bc23d88e8c379b88dcc9e69c75bc8f78';\nconst URI = 'https://api.themoviedb.org/3';\n\nasync function searchMovies(searchText) {\n  const query = encodeURIComponent(searchText);\n\n  const url = `${URI}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`; \n  const response = await axios.get(url);\n  \n  return response.data.results;\n}\n\nasync function getTrending() {\n  const url = `${URI}/trending/movie/day?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n  \n  return response.data.results;\n}\n\n\nasync function getMovieById(movieId) {\n  const url = `${URI}/movie/${movieId}?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n   \n  return response.data;\n}\n\nasync function getCastById(movieId) {\n  const url = `${URI}/movie/${movieId}/credits?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n \n  return response.data;\n}\n\nasync function getReviewById(movieId) {\n  const url = `${URI}/movie/${movieId}/reviews?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n \n  return response.data.results;\n}\n  \n\nexport { searchMovies, getMovieById, getTrending, getCastById, getReviewById};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"addInfo\":\"AdditionalMovieInfo_addInfo__50fFn\"};","import {  Link } from \"react-router-dom\";\nimport css from './AdditionalMovieInfo.module.css';\n\nexport const AdditionalMovieInfo = ({listTitle, location}) => {       \n    return (\n        <ul className={css.addInfo}>{listTitle}\n            <li>\n                <Link to=\"cast\" state={{ from: location }}>Cast</Link>         \n            </li>                              \n            <li>\n                <Link to=\"reviews\" state={{ from: location }}>Reviews</Link>   \n            </li>                                        \n        </ul>                                                                                    \n    )     \n  }\n  \n  ","// extracted by mini-css-extract-plugin\nexport default {\"movieInfoContainer\":\"MovieInfo_movieInfoContainer__DdUF8\",\"moviePoster\":\"MovieInfo_moviePoster__Z0ct8\"};","import css from './MovieInfo.module.css';\nimport { Link } from \"react-router-dom\";\n\nexport const MovieInfo = ({title,posterPath,popularity,overview,genres, location}) => {\n    return (\n        <>\n            <Link to={location}>               \n                <button> {`<-`} Go back</button> \n            </Link>  \n            <div className={css.movieInfoContainer}>                  \n                <img className={css.moviePoster} src={`https://image.tmdb.org/t/p/original${posterPath}`} alt={title} width=\"350\" height=\"600\" loading=\"lazy\" />\n                <div>\n                    <h1>{title}</h1>\n                    <p>User score: {popularity}%</p>\n                    <h2> Overview</h2>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <p>{genres}</p> \n                </div>  \n            </div>\n        </>                                                                 \n    )     \n}\n\n","import {useState, useEffect} from \"react\";\nimport { Suspense } from \"react\";\nimport { Outlet,  useParams, useLocation} from \"react-router-dom\";\nimport { AdditionalMovieInfo } from \"components/AdditionalMovieInfo/AdditionalMovieInfo.jsx\";\nimport { MovieInfo } from \"components/MovieInfo/MovieInfo.jsx\";\nimport {getMovieById}  from '../api/api.js';\nimport Notiflix from \"notiflix\";\n\nexport const MovieDetails = () => {\n    const [titleS,setTitleS] = useState(\"\");\n    const [genresS,setGenresS] = useState(\"\");\n    const [overviewS,setOverviewS] = useState(\"\");\n    const [popularityS,setPopularityS] = useState(\"\");\n    const [posterPathS,setPosterPathS] = useState(\"\");\n    const {movieId} = useParams();\n    const location = useLocation();    \n    const backLinkHref = location.state?.from ?? \"/movies\";  \n   \n    const fetchData = async () => {\n        try {\n            const aboutMovie = await getMovieById(movieId); \n            const {title, genres, overview, popularity, poster_path} = aboutMovie;\n            setTitleS(title);\n            setGenresS(genres.map(genre=>genre.name).join(\", \")); \n            setOverviewS(overview); \n            setPopularityS(Math.round(popularity));  \n            setPosterPathS(poster_path);                                     \n            if (aboutMovie === undefined) { \n                Notiflix.Notify.failure('Oops, there is no information about this movie');                               \n            }   \n        }\n        catch (error) {  \n            Notiflix.Notify.failure('Sorry, there is no information about this movie');           \n              \n        };  \n    }\n    useEffect(() => {    \n         fetchData();         \n        }         \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ,[movieId]);\n \n    return (\n        <>\n            <MovieInfo title={titleS} posterPath={posterPathS} popularity={popularityS} overview={overviewS} genres={genresS} location={backLinkHref} />          \n            <AdditionalMovieInfo listTitle=\"Additional information\" location={backLinkHref}/> \n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />    \n            </Suspense>          \n                          \n        </>\n    ) \n}    \n\nexport default MovieDetails;\n "],"names":["API_KEY","URI","searchMovies","searchText","query","encodeURIComponent","url","axios","response","data","results","getTrending","getMovieById","movieId","getCastById","getReviewById","AdditionalMovieInfo","listTitle","location","className","css","to","state","from","MovieInfo","title","posterPath","popularity","overview","genres","src","alt","width","height","loading","MovieDetails","useState","titleS","setTitleS","genresS","setGenresS","overviewS","setOverviewS","popularityS","setPopularityS","posterPathS","setPosterPathS","useParams","backLinkHref","useLocation","fetchData","aboutMovie","poster_path","map","genre","name","join","Math","round","undefined","Notiflix","useEffect","Suspense","fallback"],"sourceRoot":""}