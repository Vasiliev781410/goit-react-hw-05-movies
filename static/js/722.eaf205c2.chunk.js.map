{"version":3,"file":"static/js/722.eaf205c2.chunk.js","mappings":"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","sources":["api/api.js","components/ListFilmItem/ListFilmItem.jsx","components/ListFoundFilms/ListFoundFilms.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bc23d88e8c379b88dcc9e69c75bc8f78';\nconst URI = 'https://api.themoviedb.org/3';\n\nasync function searchMovies(searchText) {\n  const query = encodeURIComponent(searchText);\n\n  const url = `${URI}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`; \n  const response = await axios.get(url);\n  \n  return response.data.results;\n}\n\nasync function getTrending() {\n  const url = `${URI}/trending/movie/day?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n  \n  return response.data.results;\n}\n\n\nasync function getMovieById(movieId) {\n  const url = `${URI}/movie/${movieId}?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n   \n  return response.data;\n}\n\nasync function getCastById(movieId) {\n  const url = `${URI}/movie/${movieId}/credits?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n \n  return response.data;\n}\n\nasync function getReviewById(movieId) {\n  const url = `${URI}/movie/${movieId}/reviews?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n \n  return response.data.results;\n}\n  \n\nexport { searchMovies, getMovieById, getTrending, getCastById, getReviewById};\n\n","export const ListFilmItem = ({film}) => {\n    let filmName = null;\n    try {\n        filmName = film.original_title;\n        if (filmName === undefined){\n            filmName = film.name;\n        }\n    } catch (error) {      \n        console.log(error);\n    }\n    return (\n         <li id={film.id}>{filmName}</li> \n    )\n}    ","import { ListFilmItem } from \"components/ListFilmItem/ListFilmItem\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const ListFoundFilms = ({path,title, listFilms}) => {\n    const location = useLocation();\n    return (\n        <ul className=\"listFilms\">\n            <h1>{title}</h1>\n            {listFilms.map(film =>(\n                <Link key={film.id} to={`${path}${film.id}`} state={{ from: location }}>\n                    <ListFilmItem key={film.id} film={film}/>\n                </Link>\n            ))}                                                  \n        </ul>\n    ) \n}    ","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchFormInput\":\"SearchForm_searchFormInput__3mF-P\",\"searchFormButton\":\"SearchForm_searchFormButton__Zv-9i\"};","\nimport { useState } from \"react\";\nimport css from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\n\nexport const SearchForm = ({onSubmit}) => {\n  const [filter,setFilter] = useState(\"\");\n\n  const onChange = (evt) => {      \n    setFilter(evt.target.value); \n  }  \n\n  const onSubmitSearchForm = (evt) =>{\n      evt.preventDefault();                 \n      onSubmit(filter);\n      setFilter(\"\"); \n   }\n  \n  return (      \n    <form onSubmit={onSubmitSearchForm} className={css.searchForm}>     \n        <input \n          onChange={onChange}                 \n          name=\"searchQuery\"\n          className={css.searchFormInput}\n          value={filter}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"write film name\"\n        />\n        <button type=\"submit\" className={css.searchFormButton}>\n            Search\n        </button>\n    </form>\n    \n  )     \n}\n\nSearchForm.propTypes = {onSubmit: PropTypes.func};","import { useState, useEffect} from \"react\";\nimport { ListFoundFilms } from \"components/ListFoundFilms/ListFoundFilms.jsx\"\nimport { SearchForm } from \"components/SearchForm/SearchForm.jsx\"\nimport {searchMovies}  from '../api/api.js';\nimport Notiflix from \"notiflix\";\n\nexport  const Movies = () => {    \n    const [filter,setFilter] = useState(\"\"); \n    const [films,setFilms] = useState([]); \n\n    const fetchData = async () => {\n        try {\n            const results = await searchMovies(filter);                         \n            setFilms([ ...results]);                             \n            if (results.length === 0 && filter !== \"\") { \n                Notiflix.Notify.failure('Oops, there is no films with that name');                               \n            }   \n        }\n        catch (error) {  \n            Notiflix.Notify.failure('Sorry, there are no films matching your search query. Please try again.');           \n              \n        };  \n    }\n    useEffect(() => {    \n         fetchData();         \n        }         \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ,[filter]);\n\n    const onSubmitSearchForm = (filterForm) =>{            \n        setFilter(filterForm);    \n        setFilms([]);    \n    }\n\n    return (\n        <>\n            <SearchForm onSubmit={onSubmitSearchForm}/>\n            <ListFoundFilms title={\"\"} path=\"\" listFilms={films}/>\n        </>\n        \n        \n    ) \n}   \n    \nexport default Movies;\n"],"names":["API_KEY","URI","searchMovies","searchText","query","encodeURIComponent","url","axios","response","data","results","getTrending","getMovieById","movieId","getCastById","getReviewById","ListFilmItem","film","filmName","undefined","original_title","name","error","console","log","id","ListFoundFilms","path","title","listFilms","location","useLocation","className","map","to","state","from","SearchForm","onSubmit","useState","filter","setFilter","evt","preventDefault","css","onChange","target","value","type","autoComplete","autoFocus","placeholder","Movies","films","setFilms","fetchData","length","Notiflix","useEffect","filterForm"],"sourceRoot":""}