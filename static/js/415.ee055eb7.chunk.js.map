{"version":3,"file":"static/js/415.ee055eb7.chunk.js","mappings":"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","sources":["api/api.js","components/ListFilmItem/ListFilmItem.jsx","components/ListFoundFilms/ListFoundFilms.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bc23d88e8c379b88dcc9e69c75bc8f78';\nconst URI = 'https://api.themoviedb.org/3';\n\nasync function searchMovies(searchText) {\n  const query = encodeURIComponent(searchText);\n\n  const url = `${URI}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`; \n  const response = await axios.get(url);\n  \n  return response.data.results;\n}\n\nasync function getTrending() {\n  const url = `${URI}/trending/movie/day?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n  \n  return response.data.results;\n}\n\n\nasync function getMovieById(movieId) {\n  const url = `${URI}/movie/${movieId}?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n   \n  return response.data;\n}\n\nasync function getCastById(movieId) {\n  const url = `${URI}/movie/${movieId}/credits?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n \n  return response.data;\n}\n\nasync function getReviewById(movieId) {\n  const url = `${URI}/movie/${movieId}/reviews?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n \n  return response.data.results;\n}\n  \n\nexport { searchMovies, getMovieById, getTrending, getCastById, getReviewById};\n\n","export const ListFilmItem = ({film}) => {\n    let filmName = null;\n    try {\n        filmName = film.original_title;\n        if (filmName === undefined){\n            filmName = film.name;\n        }\n    } catch (error) {      \n        console.log(error);\n    }\n    return (\n         <li id={film.id}>{filmName}</li> \n    )\n}    ","import { ListFilmItem } from \"components/ListFilmItem/ListFilmItem\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const ListFoundFilms = ({path,title, listFilms, query}) => {\n    const location = useLocation();\n    if (query) {\n        location.search = `?query=${query}`;\n    }; \n    console.log(\"location: \",location);\n    return (\n        <ul className=\"listFilms\">\n            <h1>{title}</h1>\n            {listFilms.map(film =>(\n                <Link key={film.id} to={`${path}${film.id}`} state={{ from: location }}>\n                    <ListFilmItem key={film.id} film={film}/>\n                </Link>\n            ))}                                                  \n        </ul>\n    ) \n}    ","import { ListFoundFilms } from 'components/ListFoundFilms/ListFoundFilms.jsx';\nimport {getTrending}  from '../api/api.js';\nimport Notiflix from \"notiflix\";\nimport { useState, useEffect } from \"react\";\n\nexport const Home = () => {\n    const [films,setFilms] = useState([]); \n\n    const fetchData = async () => {\n        try {\n            const results = await getTrending();                          \n            setFilms([ ...results]);                             \n            if (results.length === 0) { \n                Notiflix.Notify.failure('Oops, there is no trending films now');                               \n            }   \n        }\n        catch (error) {  \n            Notiflix.Notify.failure('Sorry, there are no films now. Please try later.');              \n        };  \n    }\n    useEffect(() => {    \n         fetchData();         \n        }         \n    ,[]);\n\n    return (\n        <>\n            <ListFoundFilms title={\"Trending list\"} path=\"movies/\" listFilms={films}/>\n        </>\n    ) \n}   \n    \nexport default Home;\n"],"names":["API_KEY","URI","searchMovies","searchText","query","encodeURIComponent","url","axios","response","data","results","getTrending","getMovieById","movieId","getCastById","getReviewById","ListFilmItem","film","filmName","undefined","original_title","name","error","console","log","id","ListFoundFilms","path","title","listFilms","location","useLocation","search","className","map","to","state","from","Home","useState","films","setFilms","fetchData","length","Notiflix","useEffect"],"sourceRoot":""}