{"version":3,"file":"static/js/76.c9013556.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAM,+BAAZ,SAEeC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,kFACQC,EAAQC,mBAAmBF,GAE3BG,EAHR,UAGiBL,EAHjB,iCAG6CD,EAH7C,kBAG8DI,EAH9D,4BAIyBG,EAAAA,EAAAA,IAAUD,GAJnC,cAIQE,EAJR,yBAMSA,EAASC,KAAKC,SANvB,2EASeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6FACQL,EADR,UACiBL,EADjB,uCACmDD,GADnD,SAEyBO,EAAAA,EAAAA,IAAUD,GAFnC,cAEQE,EAFR,yBAISA,EAASC,KAAKC,SAJvB,2EAQeE,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,gFACQP,EADR,UACiBL,EADjB,kBAC8BY,EAD9B,oBACiDb,GADjD,SAEyBO,EAAAA,EAAAA,IAAUD,GAFnC,cAEQE,EAFR,yBAISA,EAASC,MAJlB,2EAOeK,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BD,GAA3B,gFACQP,EADR,UACiBL,EADjB,kBAC8BY,EAD9B,4BACyDb,GADzD,SAEyBO,EAAAA,EAAAA,IAAUD,GAFnC,cAEQE,EAFR,yBAISA,EAASC,MAJlB,2EAOeM,EAAc,GAAdA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BF,GAA7B,gFACQP,EADR,UACiBL,EADjB,kBAC8BY,EAD9B,4BACyDb,GADzD,SAEyBO,EAAAA,EAAAA,IAAUD,GAFnC,cAEQE,EAFR,yBAISA,EAASC,KAAKC,SAJvB,kE,wKCnCA,EAAwB,oBAAxB,EAAuD,uBAAvD,EAA0F,wB,SCI7EM,EAAO,WAClB,IAAOH,GAAWI,EAAAA,EAAAA,MAAXJ,QACP,GAAyBK,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAS,mCAAG,gHAEYP,EAAAA,EAAAA,IAAYD,GAFxB,OAENS,EAFM,OAGLC,EAAQD,EAARC,KACPH,GAAS,OAAIG,IAJD,iHAAH,qDAejB,OANAC,EAAAA,EAAAA,YAAU,WACLH,GACA,GAEJ,CAACR,KAGA,eAAIY,UAAU,UAAd,SACKN,EAAMO,OAAS,EACdP,EAAMQ,KAAI,SAAAC,GAAK,OACb,gBAAIH,UAAWI,EAAf,UACGD,EAAME,eAAgB,gBAAKL,UAAWI,EAAcE,IAAG,6CAAwCH,EAAME,cAAgBE,IAAKJ,EAAMK,KAAMC,QAAQ,OAAOC,MAAM,MAAMC,OAAO,QACxKR,EAAMK,MACP,kBAAMR,UAAWI,EAAjB,wBAA4CD,EAAMS,eAHrBT,EAAMU,UADxB,KAOf,gEAIP,EAED,G","sources":["api/api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bc23d88e8c379b88dcc9e69c75bc8f78';\nconst URI = 'https://api.themoviedb.org/3';\n\nasync function searchMovies(searchText) {\n  const query = encodeURIComponent(searchText);\n\n  const url = `${URI}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`; \n  const response = await axios.get(url);\n  \n  return response.data.results;\n}\n\nasync function getTrending() {\n  const url = `${URI}/trending/movie/day?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n  \n  return response.data.results;\n}\n\n\nasync function getMovieById(movieId) {\n  const url = `${URI}/movie/${movieId}?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n   \n  return response.data;\n}\n\nasync function getCastById(movieId) {\n  const url = `${URI}/movie/${movieId}/credits?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n \n  return response.data;\n}\n\nasync function getReviewById(movieId) {\n  const url = `${URI}/movie/${movieId}/reviews?api_key=${API_KEY}`; \n  const response = await axios.get(url); \n \n  return response.data.results;\n}\n  \n\nexport { searchMovies, getMovieById, getTrending, getCastById, getReviewById};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"actor\":\"Cast_actor__tWtXy\",\"actorImg\":\"Cast_actorImg__T6qL2\",\"character\":\"Cast_character__tKDlA\"};","import { useParams } from \"react-router-dom\";\nimport {useState, useEffect} from \"react\";\nimport {getCastById}  from '../../api/api.js';\nimport css from './Cast.module.css';\n\nexport const Cast = () => {\n  const {movieId} = useParams();\n  const [castS,setCastS] = useState([]);\n\n  const fetchData = async () => {\n    try {\n        const aboutCast = await getCastById(movieId);  \n        const {cast} = aboutCast;\n        setCastS([...cast]);                    \n    }\n    catch (error) {\n    };  \n}\nuseEffect(() => {    \n     fetchData();         \n    }         \n// eslint-disable-next-line react-hooks/exhaustive-deps\n,[movieId]);\n    \nreturn (\n  <ul className=\"addInfo\">\n      {castS.length > 0 ?\n        castS.map(actor => \n          <li className={css.actor} key={actor.credit_id}>             \n            {actor.profile_path && <img className={css.actorImg} src={`https://image.tmdb.org/t/p/original${actor.profile_path}`} alt={actor.name} loading=\"lazy\" width=\"100\" height=\"150\"/>}\n            {actor.name}\n            <span className={css.character}>Character: {actor.character}</span>\n          </li>\n          ) :\n        <span>We don't have cast of this movie</span>\n      }                                                                                                  \n  </ul>\n  )     \n}\n\nexport default Cast;\n"],"names":["API_KEY","URI","searchMovies","searchText","query","encodeURIComponent","url","axios","response","data","results","getTrending","getMovieById","movieId","getCastById","getReviewById","Cast","useParams","useState","castS","setCastS","fetchData","aboutCast","cast","useEffect","className","length","map","actor","css","profile_path","src","alt","name","loading","width","height","character","credit_id"],"sourceRoot":""}